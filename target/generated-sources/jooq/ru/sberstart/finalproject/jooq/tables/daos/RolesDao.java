/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.daos;


import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.sberstart.finalproject.jooq.tables.Roles;
import ru.sberstart.finalproject.jooq.tables.records.RolesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesDao extends DAOImpl<RolesRecord, ru.sberstart.finalproject.jooq.tables.pojos.Roles, UUID> {

    /**
     * Create a new RolesDao without any configuration
     */
    public RolesDao() {
        super(Roles.ROLES, ru.sberstart.finalproject.jooq.tables.pojos.Roles.class);
    }

    /**
     * Create a new RolesDao with an attached configuration
     */
    public RolesDao(Configuration configuration) {
        super(Roles.ROLES, ru.sberstart.finalproject.jooq.tables.pojos.Roles.class, configuration);
    }

    @Override
    public UUID getId(ru.sberstart.finalproject.jooq.tables.pojos.Roles object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Roles.ROLES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchById(UUID... values) {
        return fetch(Roles.ROLES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Roles fetchOneById(UUID value) {
        return fetchOne(Roles.ROLES.ID, value);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchOptionalById(UUID value) {
        return fetchOptional(Roles.ROLES.ID, value);
    }

    /**
     * Fetch records that have <code>ROLE_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchRangeOfRoleName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Roles.ROLES.ROLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ROLE_NAME IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchByRoleName(String... values) {
        return fetch(Roles.ROLES.ROLE_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>ROLE_NAME = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Roles fetchOneByRoleName(String value) {
        return fetchOne(Roles.ROLES.ROLE_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>ROLE_NAME = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Roles> fetchOptionalByRoleName(String value) {
        return fetchOptional(Roles.ROLES.ROLE_NAME, value);
    }
}

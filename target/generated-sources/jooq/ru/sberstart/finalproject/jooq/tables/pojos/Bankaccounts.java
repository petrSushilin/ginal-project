/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bankaccounts implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID bankId;
    private UUID userId;
    private LocalDate registryDate;
    private String number;
    private BigDecimal balance;
    private String state;

    public Bankaccounts() {}

    public Bankaccounts(Bankaccounts value) {
        this.id = value.id;
        this.bankId = value.bankId;
        this.userId = value.userId;
        this.registryDate = value.registryDate;
        this.number = value.number;
        this.balance = value.balance;
        this.state = value.state;
    }

    public Bankaccounts(
        UUID id,
        UUID bankId,
        UUID userId,
        LocalDate registryDate,
        String number,
        BigDecimal balance,
        String state
    ) {
        this.id = id;
        this.bankId = bankId;
        this.userId = userId;
        this.registryDate = registryDate;
        this.number = number;
        this.balance = balance;
        this.state = state;
    }

    /**
     * Getter for <code>public.BankAccounts.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.BankAccounts.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.BankAccounts.bank_id</code>.
     */
    public UUID getBankId() {
        return this.bankId;
    }

    /**
     * Setter for <code>public.BankAccounts.bank_id</code>.
     */
    public void setBankId(UUID bankId) {
        this.bankId = bankId;
    }

    /**
     * Getter for <code>public.BankAccounts.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.BankAccounts.user_id</code>.
     */
    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>public.BankAccounts.registry_date</code>.
     */
    public LocalDate getRegistryDate() {
        return this.registryDate;
    }

    /**
     * Setter for <code>public.BankAccounts.registry_date</code>.
     */
    public void setRegistryDate(LocalDate registryDate) {
        this.registryDate = registryDate;
    }

    /**
     * Getter for <code>public.BankAccounts.number</code>.
     */
    public String getNumber() {
        return this.number;
    }

    /**
     * Setter for <code>public.BankAccounts.number</code>.
     */
    public void setNumber(String number) {
        this.number = number;
    }

    /**
     * Getter for <code>public.BankAccounts.balance</code>.
     */
    public BigDecimal getBalance() {
        return this.balance;
    }

    /**
     * Setter for <code>public.BankAccounts.balance</code>.
     */
    public void setBalance(BigDecimal balance) {
        this.balance = balance;
    }

    /**
     * Getter for <code>public.BankAccounts.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>public.BankAccounts.state</code>.
     */
    public void setState(String state) {
        this.state = state;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Bankaccounts other = (Bankaccounts) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bankId == null) {
            if (other.bankId != null)
                return false;
        }
        else if (!this.bankId.equals(other.bankId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.registryDate == null) {
            if (other.registryDate != null)
                return false;
        }
        else if (!this.registryDate.equals(other.registryDate))
            return false;
        if (this.number == null) {
            if (other.number != null)
                return false;
        }
        else if (!this.number.equals(other.number))
            return false;
        if (this.balance == null) {
            if (other.balance != null)
                return false;
        }
        else if (!this.balance.equals(other.balance))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bankId == null) ? 0 : this.bankId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.registryDate == null) ? 0 : this.registryDate.hashCode());
        result = prime * result + ((this.number == null) ? 0 : this.number.hashCode());
        result = prime * result + ((this.balance == null) ? 0 : this.balance.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Bankaccounts (");

        sb.append(id);
        sb.append(", ").append(bankId);
        sb.append(", ").append(userId);
        sb.append(", ").append(registryDate);
        sb.append(", ").append(number);
        sb.append(", ").append(balance);
        sb.append(", ").append(state);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.sberstart.finalproject.jooq.tables.Userroles;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserrolesRecord extends UpdatableRecordImpl<UserrolesRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.UserRoles.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.UserRoles.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.UserRoles.role_id</code>.
     */
    public void setRoleId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.UserRoles.role_id</code>.
     */
    public UUID getRoleId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Userroles.USERROLES.USER_ID;
    }

    @Override
    public Field<UUID> field2() {
        return Userroles.USERROLES.ROLE_ID;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public UUID component2() {
        return getRoleId();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public UUID value2() {
        return getRoleId();
    }

    @Override
    public UserrolesRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserrolesRecord value2(UUID value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserrolesRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserrolesRecord
     */
    public UserrolesRecord() {
        super(Userroles.USERROLES);
    }

    /**
     * Create a detached, initialised UserrolesRecord
     */
    public UserrolesRecord(UUID userId, UUID roleId) {
        super(Userroles.USERROLES);

        setUserId(userId);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserrolesRecord
     */
    public UserrolesRecord(ru.sberstart.finalproject.jooq.tables.pojos.Userroles value) {
        super(Userroles.USERROLES);

        if (value != null) {
            setUserId(value.getUserId());
            setRoleId(value.getRoleId());
            resetChangedOnNotNull();
        }
    }
}

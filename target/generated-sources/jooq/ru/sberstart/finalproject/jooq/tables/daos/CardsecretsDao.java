/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.daos;


import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.sberstart.finalproject.jooq.tables.Cardsecrets;
import ru.sberstart.finalproject.jooq.tables.records.CardsecretsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsecretsDao extends DAOImpl<CardsecretsRecord, ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets, UUID> {

    /**
     * Create a new CardsecretsDao without any configuration
     */
    public CardsecretsDao() {
        super(Cardsecrets.CARDSECRETS, ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets.class);
    }

    /**
     * Create a new CardsecretsDao with an attached configuration
     */
    public CardsecretsDao(Configuration configuration) {
        super(Cardsecrets.CARDSECRETS, ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets.class, configuration);
    }

    @Override
    public UUID getId(ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Cardsecrets.CARDSECRETS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchById(UUID... values) {
        return fetch(Cardsecrets.CARDSECRETS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets fetchOneById(UUID value) {
        return fetchOne(Cardsecrets.CARDSECRETS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchOptionalById(UUID value) {
        return fetchOptional(Cardsecrets.CARDSECRETS.ID, value);
    }

    /**
     * Fetch records that have <code>holder_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchRangeOfHolderName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cardsecrets.CARDSECRETS.HOLDER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>holder_name IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchByHolderName(String... values) {
        return fetch(Cardsecrets.CARDSECRETS.HOLDER_NAME, values);
    }

    /**
     * Fetch records that have <code>holder_surname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchRangeOfHolderSurname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cardsecrets.CARDSECRETS.HOLDER_SURNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>holder_surname IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchByHolderSurname(String... values) {
        return fetch(Cardsecrets.CARDSECRETS.HOLDER_SURNAME, values);
    }

    /**
     * Fetch records that have <code>validate_period BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchRangeOfValidatePeriod(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Cardsecrets.CARDSECRETS.VALIDATE_PERIOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>validate_period IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchByValidatePeriod(LocalDate... values) {
        return fetch(Cardsecrets.CARDSECRETS.VALIDATE_PERIOD, values);
    }

    /**
     * Fetch records that have <code>secret_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchRangeOfSecretCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cardsecrets.CARDSECRETS.SECRET_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secret_code IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets> fetchBySecretCode(String... values) {
        return fetch(Cardsecrets.CARDSECRETS.SECRET_CODE, values);
    }
}

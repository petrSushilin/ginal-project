/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.sberstart.finalproject.jooq.tables.Cards;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements Record5<UUID, UUID, UUID, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.Cards.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.Cards.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.Cards.bankaccount_id</code>.
     */
    public void setBankaccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.Cards.bankaccount_id</code>.
     */
    public UUID getBankaccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.Cards.card_secret_id</code>.
     */
    public void setCardSecretId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.Cards.card_secret_id</code>.
     */
    public UUID getCardSecretId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.Cards.number</code>.
     */
    public void setNumber(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.Cards.number</code>.
     */
    public String getNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.Cards.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.Cards.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, UUID, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Cards.CARDS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Cards.CARDS.BANKACCOUNT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Cards.CARDS.CARD_SECRET_ID;
    }

    @Override
    public Field<String> field4() {
        return Cards.CARDS.NUMBER;
    }

    @Override
    public Field<String> field5() {
        return Cards.CARDS.STATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getBankaccountId();
    }

    @Override
    public UUID component3() {
        return getCardSecretId();
    }

    @Override
    public String component4() {
        return getNumber();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getBankaccountId();
    }

    @Override
    public UUID value3() {
        return getCardSecretId();
    }

    @Override
    public String value4() {
        return getNumber();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public CardsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CardsRecord value2(UUID value) {
        setBankaccountId(value);
        return this;
    }

    @Override
    public CardsRecord value3(UUID value) {
        setCardSecretId(value);
        return this;
    }

    @Override
    public CardsRecord value4(String value) {
        setNumber(value);
        return this;
    }

    @Override
    public CardsRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public CardsRecord values(UUID value1, UUID value2, UUID value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(UUID id, UUID bankaccountId, UUID cardSecretId, String number, String state) {
        super(Cards.CARDS);

        setId(id);
        setBankaccountId(bankaccountId);
        setCardSecretId(cardSecretId);
        setNumber(number);
        setState(state);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(ru.sberstart.finalproject.jooq.tables.pojos.Cards value) {
        super(Cards.CARDS);

        if (value != null) {
            setId(value.getId());
            setBankaccountId(value.getBankaccountId());
            setCardSecretId(value.getCardSecretId());
            setNumber(value.getNumber());
            setState(value.getState());
            resetChangedOnNotNull();
        }
    }
}

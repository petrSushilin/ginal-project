/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.daos;


import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.sberstart.finalproject.jooq.tables.Users;
import ru.sberstart.finalproject.jooq.tables.records.UsersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersDao extends DAOImpl<UsersRecord, ru.sberstart.finalproject.jooq.tables.pojos.Users, UUID> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, ru.sberstart.finalproject.jooq.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, ru.sberstart.finalproject.jooq.tables.pojos.Users.class, configuration);
    }

    @Override
    public UUID getId(ru.sberstart.finalproject.jooq.tables.pojos.Users object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Users.USERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchById(UUID... values) {
        return fetch(Users.USERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Users fetchOneById(UUID value) {
        return fetchOne(Users.USERS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchOptionalById(UUID value) {
        return fetchOptional(Users.USERS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchByName(String... values) {
        return fetch(Users.USERS.NAME, values);
    }

    /**
     * Fetch records that have <code>surname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfSurname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.SURNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>surname IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchBySurname(String... values) {
        return fetch(Users.USERS.SURNAME, values);
    }

    /**
     * Fetch records that have <code>birthdate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfBirthdate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Users.USERS.BIRTHDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>birthdate IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchByBirthdate(LocalDate... values) {
        return fetch(Users.USERS.BIRTHDATE, values);
    }

    /**
     * Fetch records that have <code>phone_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfPhoneNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PHONE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone_number IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchByPhoneNumber(String... values) {
        return fetch(Users.USERS.PHONE_NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>phone_number = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Users fetchOneByPhoneNumber(String value) {
        return fetchOne(Users.USERS.PHONE_NUMBER, value);
    }

    /**
     * Fetch a unique record that has <code>phone_number = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchOptionalByPhoneNumber(String value) {
        return fetchOptional(Users.USERS.PHONE_NUMBER, value);
    }

    /**
     * Fetch records that have <code>passport_number BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfPassportNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSPORT_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>passport_number IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchByPassportNumber(String... values) {
        return fetch(Users.USERS.PASSPORT_NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>passport_number = value</code>
     */
    public ru.sberstart.finalproject.jooq.tables.pojos.Users fetchOneByPassportNumber(String value) {
        return fetchOne(Users.USERS.PASSPORT_NUMBER, value);
    }

    /**
     * Fetch a unique record that has <code>passport_number = value</code>
     */
    public Optional<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchOptionalByPassportNumber(String value) {
        return fetchOptional(Users.USERS.PASSPORT_NUMBER, value);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<ru.sberstart.finalproject.jooq.tables.pojos.Users> fetchByStatus(String... values) {
        return fetch(Users.USERS.STATUS, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package ru.sberstart.finalproject.jooq.tables.records;


import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.sberstart.finalproject.jooq.tables.Cardsecrets;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsecretsRecord extends UpdatableRecordImpl<CardsecretsRecord> implements Record5<UUID, String, String, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.CardSecrets.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.CardSecrets.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.CardSecrets.holder_name</code>.
     */
    public void setHolderName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.CardSecrets.holder_name</code>.
     */
    public String getHolderName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.CardSecrets.holder_surname</code>.
     */
    public void setHolderSurname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.CardSecrets.holder_surname</code>.
     */
    public String getHolderSurname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.CardSecrets.validate_period</code>.
     */
    public void setValidatePeriod(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.CardSecrets.validate_period</code>.
     */
    public LocalDate getValidatePeriod() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>public.CardSecrets.secret_code</code>.
     */
    public void setSecretCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.CardSecrets.secret_code</code>.
     */
    public String getSecretCode() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, LocalDate, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, LocalDate, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Cardsecrets.CARDSECRETS.ID;
    }

    @Override
    public Field<String> field2() {
        return Cardsecrets.CARDSECRETS.HOLDER_NAME;
    }

    @Override
    public Field<String> field3() {
        return Cardsecrets.CARDSECRETS.HOLDER_SURNAME;
    }

    @Override
    public Field<LocalDate> field4() {
        return Cardsecrets.CARDSECRETS.VALIDATE_PERIOD;
    }

    @Override
    public Field<String> field5() {
        return Cardsecrets.CARDSECRETS.SECRET_CODE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getHolderName();
    }

    @Override
    public String component3() {
        return getHolderSurname();
    }

    @Override
    public LocalDate component4() {
        return getValidatePeriod();
    }

    @Override
    public String component5() {
        return getSecretCode();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getHolderName();
    }

    @Override
    public String value3() {
        return getHolderSurname();
    }

    @Override
    public LocalDate value4() {
        return getValidatePeriod();
    }

    @Override
    public String value5() {
        return getSecretCode();
    }

    @Override
    public CardsecretsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public CardsecretsRecord value2(String value) {
        setHolderName(value);
        return this;
    }

    @Override
    public CardsecretsRecord value3(String value) {
        setHolderSurname(value);
        return this;
    }

    @Override
    public CardsecretsRecord value4(LocalDate value) {
        setValidatePeriod(value);
        return this;
    }

    @Override
    public CardsecretsRecord value5(String value) {
        setSecretCode(value);
        return this;
    }

    @Override
    public CardsecretsRecord values(UUID value1, String value2, String value3, LocalDate value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsecretsRecord
     */
    public CardsecretsRecord() {
        super(Cardsecrets.CARDSECRETS);
    }

    /**
     * Create a detached, initialised CardsecretsRecord
     */
    public CardsecretsRecord(UUID id, String holderName, String holderSurname, LocalDate validatePeriod, String secretCode) {
        super(Cardsecrets.CARDSECRETS);

        setId(id);
        setHolderName(holderName);
        setHolderSurname(holderSurname);
        setValidatePeriod(validatePeriod);
        setSecretCode(secretCode);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CardsecretsRecord
     */
    public CardsecretsRecord(ru.sberstart.finalproject.jooq.tables.pojos.Cardsecrets value) {
        super(Cardsecrets.CARDSECRETS);

        if (value != null) {
            setId(value.getId());
            setHolderName(value.getHolderName());
            setHolderSurname(value.getHolderSurname());
            setValidatePeriod(value.getValidatePeriod());
            setSecretCode(value.getSecretCode());
            resetChangedOnNotNull();
        }
    }
}
